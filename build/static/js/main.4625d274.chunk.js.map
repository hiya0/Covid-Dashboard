{"version":3,"sources":["Components/Cards/Card/SingleCard.jsx","Components/Cards/Cards.jsx","api/index.js","Components/Chart/Chart.jsx","Components/CountryPicker/CountryPicker.jsx","Components/CovidMap/CovidMap.jsx","App.jsx","index.js","Components/Cards/Cards.module.css","App.module.css","Components/Cards/Card/SingleCard.module.css","Components/Chart/Chart.module.css","image/logo1.jpg"],"names":["useStyles","makeStyles","title","color","fontSize","date","subtitle","marginTop","SingleCard","className","cardTitle","value","lastUpdate","cardSubtitle","classes","Grid","item","component","Card","xs","md","cx","styles","card","CardContent","Typography","gutterBottom","variant","start","end","duration","separator","Date","toDateString","Cards","data","confirmed","recovered","deaths","container","spacing","justify","infected","url","fetchData","country","a","modurl","axios","get","modifiedData","console","log","fetchDailyData","map","positive","death","dateChecked","countries","name","Chart","useState","dailyData","setDailyData","useEffect","fetchD","barChart","labels","datasets","label","backgroundColor","options","legend","display","text","lineChart","toLocaleDateString","borderColor","fill","base","marginBottom","paddingLeft","CountryPicker","handleCountryChange","setCountry","fetchCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","c","index","key","mapboxgl","accessToken","CovidMap","mapboxElRef","useRef","useSWR","fetch","then","r","json","point","type","geometry","coordinates","longitude","latitude","properties","id","province","cases","stats","Map","current","style","center","zoom","addControl","NavigationControl","once","addSource","features","addLayer","source","paint","lastId","popup","Popup","closeButton","closeOnClick","on","getCanvas","cursor","slice","countryISO","lookup","byCountry","iso2","byInternet","provinceHTML","mortalityRate","toFixed","countryFlagHTML","Boolean","HTML","Math","abs","lngLat","lng","setLngLat","setHTML","addTo","undefined","remove","root","minWidth","margin","minHeight","alignItems","justifyContent","ref","App","state","flag","check","setState","handleChange","val","ch","this","image","alt","src","heading","Switch","checked","inputProps","footer","CssBaseline","Container","maxWidth","align","Link","href","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4625d274.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card,CardContent,Typography,Grid} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './SingleCard.module.css';\r\n\r\nconst useStyles= makeStyles({\r\n    title:{\r\n        color: \"rgba(241, 167, 7, 0.938)\",\r\n        fontSize:\"25px\"\r\n    },\r\n    date:{\r\n        fontSize:\"13px\"\r\n    },\r\n    subtitle:{\r\n        marginTop:\"3px\",\r\n        fontSize:\"15px\"\r\n    }\r\n})\r\n\r\nconst SingleCard=({className,cardTitle,value,lastUpdate,cardSubtitle})=> {\r\n    const classes=useStyles();\r\n    return(\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card,className)}>\r\n            <CardContent>\r\n                <Typography className={classes.title} gutterBottom>{cardTitle}</Typography>\r\n                <Typography variant=\"h5\" color=\"primary\"><CountUp start={0} end={value} duration={1.0} separator=\",\"/></Typography>\r\n                <Typography color=\"textSecondary\" className={classes.date}>{new Date(lastUpdate).toDateString()}</Typography>\r\n                <Typography variant=\"body2\" className={classes.subtitle}>{cardSubtitle}</Typography>\r\n            </CardContent>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default SingleCard;","import React from 'react';\r\nimport { Grid} from '@material-ui/core';\r\n\r\nimport SingleCard from './Card/SingleCard';\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n    if(!confirmed)\r\n        return \"Loading...\";\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <SingleCard className={styles.infected} cardTitle=\"Infected\" value={confirmed.value} \r\n                    lastUpdate={lastUpdate} cardSubtitle=\"Number of active cases of COVID-19\"/>\r\n\r\n                <SingleCard className={styles.recovered} cardTitle=\"Recovered\" value={recovered.value} \r\n                    lastUpdate={lastUpdate} cardSubtitle=\"Number of recoveries from COVID-19\"/>\r\n\r\n                <SingleCard className={styles.deaths} cardTitle=\"Deaths\" value={deaths.value} \r\n                    lastUpdate={lastUpdate} cardSubtitle=\"Number of deaths caused by COVID-19\"/>   \r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url='https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData= async(country) =>{\r\n    let modurl=url;\r\n    if(country)\r\n        modurl=`${url}/countries/${country}`;\r\n    try{\r\n        const {data:{ confirmed,recovered,deaths,lastUpdate}}= await axios.get(modurl);\r\n        const modifiedData = {confirmed,recovered,deaths,lastUpdate};\r\n        \r\n\r\n        return modifiedData;\r\n\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData= async() => {\r\n    try{\r\n        const {data}= await axios.get('https://api.covidtracking.com/v1/us/daily.json')\r\n        const modifiedData=data.map(({positive,recovered,death,dateChecked: date})=>({\r\n            confirmed:positive,\r\n            recovered,\r\n            deaths:death,\r\n            date\r\n        }));\r\n        return modifiedData;\r\n    } catch(error)\r\n    {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const countries = async() => {\r\n    try{\r\n        const {data:{countries}}=await axios.get(`${url}/countries`);\r\n        \r\n        return countries.map((country)=>country.name)\r\n    }catch(error)\r\n    {\r\n        console.log(error)\r\n    }\r\n}","import React,{useState,useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api/index';\r\n\r\nimport {Line,Bar} from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data:{confirmed,recovered,deaths },country}) => {\r\n    const [dailyData,setDailyData]= useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchD= async()=>{\r\n            const data=await fetchDailyData();\r\n            setDailyData(data);\r\n        }\r\n\r\n        fetchD();\r\n    },[]);\r\n\r\n    const barChart=(\r\n        confirmed?\r\n        (\r\n            <Bar\r\n                data={{\r\n                    labels: ['Infected','Recovered','Deaths'],\r\n                    datasets:[{\r\n                        label:'People',\r\n                        backgroundColor:['rgba(1, 157, 247, 0.829)','rgba(52, 170, 6, 0.87)','rgba(252, 14, 14, 0.829)'],\r\n                        data:[confirmed.value,recovered.value,deaths.value]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    legend:{ display: false},\r\n                    title:{ display:true,text: `Current state in ${country}`}\r\n                }}\r\n            />\r\n        ): null\r\n    );\r\n\r\n    const lineChart=(\r\n        dailyData[0] ?\r\n        (<Line \r\n            data={{\r\n            labels: dailyData.map(({ date }) => new Date(date).toLocaleDateString()),\r\n            datasets: [\r\n                {\r\n                    data: dailyData.map((data) => data.confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#019df7d3',\r\n                    fill: true\r\n                },\r\n                {\r\n                    data: dailyData.map((data) => data.recovered),\r\n                    label: 'Recovered',\r\n                    borderColor: 'green',\r\n                    backgroundColor: 'rgba(0, 255, 0, 0.5)',\r\n                    fill: true,\r\n                  },\r\n                {\r\n                    data: dailyData.map((data) => data.deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: '#fc0e0ed3',\r\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                    fill: true\r\n                }\r\n            ]\r\n        }}/>):null\r\n    );\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            {country?barChart:lineChart}\r\n        </div>\r\n    );\r\n    }\r\n\r\n\r\nexport default Chart;","import React,{useState,useEffect} from 'react';\r\nimport {NativeSelect,FormControl} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport { countries } from '../../api';\r\n\r\n\r\nconst useStyles=makeStyles({\r\n    base:{\r\n        marginTop: '20px',\r\n        marginBottom:'25px',\r\n        paddingLeft:'5px'\r\n    }\r\n})\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    const [country,setCountry]=useState();\r\n\r\n    useEffect(()=>{\r\n        const fetchCountries=async()=>{\r\n            setCountry(await countries());\r\n        }\r\n        fetchCountries();\r\n    },[]);\r\n\r\n    const classes=useStyles();\r\n\r\n    return(\r\n       <FormControl>\r\n           <NativeSelect className={classes.base} defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n               <option value=\"\">Global</option>\r\n               {country?country.map((c,index)=><option key={index} value={c}>{c}</option>)\r\n               :\"\"}\r\n           </NativeSelect>\r\n       </FormControl>\r\n    );\r\n}\r\n\r\nexport default CountryPicker;","import React, { useRef, useEffect } from \"react\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport useSWR from \"swr\";\r\nimport lookup from \"country-code-lookup\";\r\nimport \"./CovidMap.css\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\n\r\nmapboxgl.accessToken =\r\n  \"pk.eyJ1IjoidHJib3QiLCJhIjoiY2s3NmFscm1xMTV0MDNmcXFyOWp1dGhieSJ9.tR2IMHDqBPOf_AeGjHOKFA\";\r\n\r\nfunction CovidMap() {\r\n  const mapboxElRef = useRef(null); \r\n\r\n  const fetcher = url =>\r\n    fetch(url)\r\n      .then(r => r.json())\r\n      .then(data =>\r\n        data.map((point, index) => ({\r\n          type: \"Feature\",\r\n          geometry: {\r\n            type: \"Point\",\r\n            coordinates: [\r\n              point.coordinates.longitude,\r\n              point.coordinates.latitude\r\n            ]\r\n          },\r\n          properties: {\r\n            id: index,\r\n            country: point.country,\r\n            province: point.province,\r\n            cases: point.stats.confirmed,\r\n            deaths: point.stats.deaths\r\n          }\r\n        }))\r\n      );\r\n\r\n  const { data } = useSWR(\"https://corona.lmao.ninja/v2/jhucsse\", fetcher);\r\n\r\n  \r\n  useEffect(() => {\r\n    if (data) {\r\n      const map = new mapboxgl.Map({\r\n        container: mapboxElRef.current,\r\n        style: \"mapbox://styles/notalemesa/ck8dqwdum09ju1ioj65e3ql3k\",\r\n        center: [16, 27],\r\n        zoom: 2\r\n      });\r\n\r\n      \r\n      map.addControl(new mapboxgl.NavigationControl());\r\n\r\n      map.once(\"load\", function() {\r\n        \r\n        map.addSource(\"points\", {\r\n          type: \"geojson\",\r\n          data: {\r\n            type: \"FeatureCollection\",\r\n            features: data\r\n          }\r\n        });\r\n\r\n        \r\n        map.addLayer({\r\n          id: \"circles\",\r\n          source: \"points\",\r\n          type: \"circle\",\r\n          paint: {\r\n            \"circle-opacity\": 0.75,\r\n            \"circle-stroke-width\": [\r\n              \"interpolate\",\r\n              [\"linear\"],\r\n              [\"get\", \"cases\"],\r\n              1,\r\n              1,\r\n              100000,\r\n              1.75\r\n            ],\r\n            \"circle-radius\": [\r\n              \"interpolate\",\r\n              [\"linear\"],\r\n              [\"get\", \"cases\"],\r\n              1,\r\n              4,\r\n              1000,\r\n              8,\r\n              4000,\r\n              10,\r\n              8000,\r\n              14,\r\n              12000,\r\n              18,\r\n              100000,\r\n              40\r\n            ],\r\n            \"circle-color\": [\r\n              \"interpolate\",\r\n              [\"linear\"],\r\n              [\"get\", \"cases\"],\r\n              1,\r\n              \"#ffffb2\",\r\n              5000,\r\n              \"#fed976\",\r\n              10000,\r\n              \"#feb24c\",\r\n              25000,\r\n              \"#fd8d3c\",\r\n              50000,\r\n              \"#fc4e2a\",\r\n              75000,\r\n              \"#e31a1c\",\r\n              100000,\r\n              \"#b10026\"\r\n            ]\r\n          }\r\n        });\r\n\r\n        const popup = new mapboxgl.Popup({\r\n          closeButton: false,\r\n          closeOnClick: false\r\n        });\r\n\r\n        let lastId;\r\n\r\n        map.on(\"mousemove\", \"circles\", e => {\r\n          const id = e.features[0].properties.id;\r\n\r\n          if (id !== lastId) {\r\n            lastId = id;\r\n            const {\r\n              cases,\r\n              deaths,\r\n              country,\r\n              province\r\n            } = e.features[0].properties;\r\n\r\n            \r\n            map.getCanvas().style.cursor = \"pointer\";\r\n\r\n            const coordinates = e.features[0].geometry.coordinates.slice();\r\n\r\n            const countryISO =\r\n              lookup.byCountry(country)?.iso2 ||\r\n              lookup.byInternet(country)?.iso2;\r\n            const provinceHTML =\r\n              province !== \"null\" ? `<p>Province: <b>${province}</b></p>` : \"\";\r\n            const mortalityRate = ((deaths / cases) * 100).toFixed(2);\r\n            const countryFlagHTML = Boolean(countryISO)\r\n              ? `<img src=\"https://www.countryflags.io/${countryISO}/flat/64.png\"></img>`\r\n              : \"\";\r\n\r\n            const HTML = `<p>Country: <b>${country}</b></p>\r\n                ${provinceHTML}\r\n                <p>Cases: <b>${cases}</b></p>\r\n                <p>Deaths: <b>${deaths}</b></p>\r\n                <p>Mortality Rate: <b>${mortalityRate}%</b></p>\r\n                ${countryFlagHTML}`;\r\n\r\n            while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n              coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\r\n            }\r\n\r\n            popup\r\n              .setLngLat(coordinates)\r\n              .setHTML(HTML)\r\n              .addTo(map);\r\n          }\r\n        });\r\n\r\n        map.on(\"mouseleave\", \"circles\", function() {\r\n          lastId = undefined;\r\n          map.getCanvas().style.cursor = \"\";\r\n          popup.remove();\r\n        });\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      minWidth: 275,\r\n      margin:20\r\n    },\r\n    map:{\r\n      minWidth:800,\r\n      minHeight:500,\r\n      margin:15,\r\n      alignItems: 'center',\r\n      justifyContent: 'center'\r\n    }\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent className={classes.map}>\r\n        <div className=\"mapBox\" ref={mapboxElRef} />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default CovidMap;\r\n","import React from 'react';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nimport Cards from './Components/Cards/Cards';\r\nimport Chart from './Components/Chart/Chart';\r\nimport CountryPicker from './Components/CountryPicker/CountryPicker';\r\n\r\nimport {fetchData} from './api/index';\r\nimport styles from './App.module.css';\r\n\r\nimport image from './image/logo1.jpg';\r\nimport CovidMap from './Components/CovidMap/CovidMap';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n      data: {},\r\n      country: '',\r\n      flag: false,\r\n      check: true\r\n    }\r\n  \r\n    async componentDidMount() {\r\n      const data = await fetchData();\r\n  \r\n      this.setState({ data });\r\n    }\r\n\r\n\r\n    handleCountryChange = async (country) => {\r\n      const data = await fetchData(country);\r\n  \r\n      this.setState({ data, country: country });\r\n    }\r\n\r\n    handleChange=()=>{\r\n      var val=!this.state.flag;\r\n      var ch=!this.state.check;\r\n      this.setState({flag: val,check:ch})\r\n    }\r\n  \r\n    render() {\r\n      const { data, country,flag,check } = this.state;\r\n  \r\n      return (\r\n        <div className={styles.container}>\r\n          <img className={styles.image} alt=\"covid\" src={image}/>\r\n          <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n          <Cards data={data} />\r\n          <p className={styles.heading}>Switch to see the country chart</p>\r\n          <Switch\r\n            checked={check}\r\n            onChange={()=>{this.handleChange()}}\r\n            name=\"checked\"\r\n            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n           />\r\n           {\r\n             flag ? <Chart data={data} country={country} /> \r\n             : <CovidMap/>\r\n           }\r\n           <div className={styles.footer}>\r\n              <CssBaseline />\r\n              <Container component=\"main\" maxWidth=\"sm\">\r\n                <Typography variant=\"body1\" align=\"center\"><Link href='https://github.com/hiya0'>GitHub Profile</Link></Typography>\r\n              </Container>\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__32aPo\",\"card\":\"Cards_card__3WqeB\",\"infected\":\"Cards_infected__gZV17\",\"recovered\":\"Cards_recovered__3dr4t\",\"deaths\":\"Cards_deaths__tnY17\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2dowP\",\"image\":\"App_image__3Km0L\",\"heading\":\"App_heading__1c1UW\",\"footer\":\"App_footer__3PKm1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"SingleCard_card__2UWkY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2omtN\"};","module.exports = __webpack_public_path__ + \"static/media/logo1.6ce9074d.jpg\";"],"sourceRoot":""}